type AccountInformation {
    accountId: ID!
    loanVersion: String
    holderName: String!
    holderAddress: String!
    SSN_NUMBER:String!
    finalAmount:Float
}


input CreateAccount {
    loanVersion: String
    holderName: String!
    holderAddress: String!
    SSN_NUMBER:String!
    startingBalance:Float!
}

input AccountTransaction {
    accountId: Int!
    amount:Float!
    operation:OPERATIONS!
}

enum OPERATIONS {
    DEBIT
    CREDIT
}

type Mutation{
    createAccount(account:CreateAccount):AccountInformation
    updateTransactionInAccount(account: AccountTransaction!): AccountInformation
}

input AccountFilter{
    accountId:Int
    loanVersion: String
}


type Query {
    getAllAccountInformation : [ AccountInformation ]
    getAccountInformation(accountId: Int):  AccountInformation
    getAccountsInformation(accountIds: [Int], loanVersion: String):[AccountInformation]

    getAccountsInfo(filter : [AccountFilter]): [AccountInformation]
}




